---
title: Entendendo de uma vez por todas a diferen√ßa entre slice e splice em arrays javascript, um guia definitivo.
layout: post
category: blog
description: Uma maneira simples e bem explicada de como entender de uma vez por todas a diferen√ßa entre slice e splice em arrays javascript e como e aonde us√°-los.
author: alexleko
date: '2019-03-02 14:00:00'
tag:
    - javascript
    - tutoriais
---

Fala galera!!! Olha eu aqui de novo. O assunto que vamos discutir hoje, n√£o √© novo, e nem de longe complexo, mas ainda causa bastante confus√£o. Eu mesmo no inicio me confundia bastante, e quero hoje, te ajudar a nunca mais errar a diferen√ßa entre `slice` e `splice`, creio que a pr√≥pria entona√ß√£o da pronuncia j√° faz com que nossa mente se engane. Traduzindo ao p√© da letra, **Slice** √© uma _fatia_, um _peda√ßo_ de algo, j√° **Splice** √© _emenda_.

Tendo isso em mente, vamos contar uma hist√≥ria que defina de um jeito que n√£o vamos esquecer:

## Slice

> Imagine tr√™s garotos, Pedro, Tiago e Jo√£o, olhando pela vitrine de uma confeitaria uma torna gigante, imaginou?. Ent√£o acompanha o di√°logo:
>
> Pedro diz: - Eu vou querer o primeiro _slice_!
>
> Tiago - Eu prefiro o _slice_ do meio, tem mais recheio.
>
> Jo√£o - Ent√£o o resto √© meu!üòù

Vejamos isso na pratica.

```js
var boloInteiro = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var oPrimeiroPedacoEhMeu = boloInteiro.slice(0, 1);
console.log(oPrimeiroPedacoEhMeu);
// resultado: [1]

var prefiroDoMeio = boloInteiro.slice(4, 5);
console.log(prefiroDoMeio);
// resultado: [5]

var oRestoEhMeu = boloInteiro.slice(8);
console.log(oRestoEhMeu);
// resultado: [9, 10]

// Como os garotos estavam apenas imaginando, mesmo depois de distribuir, todas essas slices,
// o bolo ainda t√° inteirinho
console.log(boloInteiro);
// resultado: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
```

Melhor que isso, s√≥ dois disso n√©.ü§ì Creio que essa √© a maneira mais f√°cil de entender, trazendo coisas do dia a dia para a programa√ß√£o, √† l√° orienta√ß√£o a objetos. E se mesmo assim n√£o conseguiu entender, deixa o seu coment√°rio a√≠ que tento te ajudar a entender de uma vez por todas.

> **Nota t√©cnica**:
>
> O m√©todo slice() retorna uma c√≥pia de parte de um array a partir de um subarray
> criado entre as posi√ß√µes begin e end (end n√£o √© necess√°rio) de um array original.
> O Array original n√£o √© modificado.
> Assinatura:
>
>       arr.slice([begin[, end]])
>
> Traduzindo:
>
>       bolo.pedacos(posi√ß√£o da faca imaginaria, quantos peda√ßos corta)
>
> [Array.prototype.slice()](https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/slice){:targe="\_blank"}

## Splice

Esse eu acho ainda mais interessante, para trazer ao mundo real, continuaremos com o bolo, mas dessa vez, um feito pela vov√≥, quer mais hist√≥rias? (Siiiiiiim!!!!)

> Era uma daquelas tarde de domingo, a vov√≥ fez um bolo de fub√°, e deixou cortadinho e esfriando em cima da mesa.
> Seu neto, Pedro, malandro, nem esperou esfriar, foi l√° e pegou dois peda√ßos, guloso! Enquanto ainda comia o primeiro,
> sua av√≥ o pegou no flagra, e disse: - larga de ser olho grande menino! Pode **_Splice_** um desses peda√ßos no lugar. (forte essa hein üòÇ)

Diferente do bolo da vitrine, aonde os garotos s√≥ imaginavam estar comendo o bolo, aqui, ele foi comigo, ou seja, n√£o existe mais aquele peda√ßo, porem, se voc√™s prestaram aten√ß√£o na hist√≥ria, o Pedro, comeu um peda√ßo e sua av√≥, mandou ele colocar o outro no lugar, pra fazer isso, usaremos o **Splice**.

```js
var boloInteiro = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var pegandoDoisPedacos = boloInteiro.splice(0, 2);
console.log(pegandoDoisPedacos);
// resultado: [1, 2]

console.log(boloInteiro);
// resultado: [3, 4, 5, 6, 7, 8, 9, 10]

// devolvendo o segundo peda√ßo
// Observe que como quero devolver um peda√ßo, escolho a posi√ß√£o que quero colocar esse peda√ßo
// no caso a posi√ß√£o 0, como n√£o quero pegar, informo que n√£o quero andar no array, nesse caso coloco 0
// e por fim, devolvo o peda√ßo n√∫mero 2.
// array.splice(posi√ß√£o da faca, quantos peda√ßos corta, ...infinitos peda√ßos no lugar se quiser)
boloInteiro.splice(0, 0, 2);
console.log(prefiroDoMeio);
// resultado: [2, 3, 4, 5, 6, 7, 8, 9, 10]
```

E a√≠, pegou o esquema? Mais complicado? Falando tecnicamente.

> **Nota t√©cnica**:
>
> O m√©todo splice() altera o conte√∫do de uma lista, adicionando novos elementos enquanto remove elementos antigos.
>
> Assinatura:
>
>       array.splice(indice[, deleteCount[, elemento1[, ...[, elementoN]]])
>
> Traduzindo:
>
>       bolo.pedacos(posi√ß√£o da faca, quantos peda√ßos cortar, ...infinitos peda√ßos para colocar no lugar se quiser)
>
> [Array.prototype.splice()](https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/splice){:targe="\_blank"}

<div class="breaker"></div>

## Os Finalmentes

O m√©todo **Slice** √© usado para consultar posi√ß√µes de um Array, trazer uma determinada parte dele, sem modific√°-lo, j√° com o **Splice**, voc√™ remove os elementos de uma determinada posi√ß√£o de Array, com a possibilidade de colocar outros no lugar, ambos os m√©todos, retornam as posi√ß√µes manipuladas. As funcionalidades de ambos, s√£o realmente parecidas, mas como costumo repetir: _Parecido n√£o √© igual_.

√â isso, espero ter ajudado, e finalmente voc√™ tenha entendido essa diferen√ßa, qualquer coisa estou a disposi√ß√£o, deixe seu coment√°rio, compartilhe com seus amigos, e vejo voc√™s no pr√≥ximo post.

**_Tchau e Ben√ßa!!!_**
